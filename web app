webAPP hacking
components of web application security::
presentation(browser)=>logic(webserver)=>data(database)

in presentaion(crosssite sciripting,exploite weakness etc)

qury string routings and http verbs::

Routing:
define actions

discovery of client security constructs


portection offered by browser::
phishing sites;
invalidated ssl certification
weak cryptography rules
mixed content
reflected cross site scripting
security headers

what the browser con't defend against::
params tempering(cookie,forms,headers,query string)
persisting cross site scripting

tools
net sparker for (spider)
burp suit(forced browsing)
(directory traversal)
banner grabbing with wget/curl
server finger printing(nmap,znmap)
acunetix(discovery or devlopment artifect)(check web scanner)
(dicovery of services via genrated documentation)
CVE.mitre.org(drupal)(discovery framework)
identifing vulnerable tragtes with shodan(shodanhq.com)(shodan tools)

tempering of untrusted data::
OWASP(open web application security project) TOP 10 RISKS:
AI INJECTION
A2 BROKEN AUTHENTICATION
CROSS SITE SCRIPTING
ETC...

Understanding Data::(something come outside of dir)
request body
request headers
query string
url routing
changing http verb
external service
 
Parmerter tempering ::
tools(fiddler)

hidden form field::

Mass assigment attack:
Model binding 

cookie poisoning:

Insecure direct object refrence:

defending against tempering
assue malicious intent
verify the server
clinet persistent is dangerous
whitlist allowable behaviors

